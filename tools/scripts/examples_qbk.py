#!/usr/bin/python3
#
# Copyright (c) 2019-2024 Ruben Perez Hidalgo (rubenperez038 at gmail dot com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

from typing import NamedTuple, List
from os import path

REPO_BASE = path.abspath(path.join(path.dirname(path.realpath(__file__)), '..', '..'))

class Example(NamedTuple):
    id: str
    path: str
    title: str


class MultiExample(NamedTuple):
    id: str
    paths: List[str]
    title: str


def render_simple_cpp(id: str, path: str) -> str:
    return f'[import ../../example/{path}]\n[example_{id}]'


def render_multi_cpp(id: str, paths: List[str]) -> str:
    def get_file_id(p: str):
        # File IDs follow the below convention
        converted_id = path.basename(p).replace('.', '_')
        return f'{id}_{converted_id}'

    return '\n\n'.join(render_simple_cpp(get_file_id(p), p) for p in paths)


LINK_TEMPLATE = '* [link mysql.examples.{example.id} {example.title}]'
SECTION_TEMPLATE = '''
[section:{example.id} {example.title}]

This example assumes you have gone through the [link mysql.examples.setup setup].

{example_cpps}

[endsect]
'''

TEMPLATE='''[/
    Copyright (c) 2019-2024 Ruben Perez Hidalgo (rubenperez038 at gmail dot com)
   
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
]

[/ This file was auto-generated by examples_qbk.py. Do not edit directly ]

[section:examples Examples]

To run the examples, please go through the [link mysql.examples.setup setup] first.

Here is a list of available examples:

[heading Tutorials]

Self-contained programs demonstrating the basic concepts.

{tutorial_links}

[heading Simple programs]

Self-contained programs demonstrating more advanced concepts and techniques.

{simple_links}

[heading Advanced examples]

Programs implementing real-world functionality.

{advanced_links}
# [@https://github.com/anarthal/servertech-chat The BoostServerTech chat project uses Boost.MySQL and Boost.Redis to implement a chat server]

[heading Setup]

To run the examples, you need a MySQL server you can connect to.
Examples make use of a database named `boost_mysql_examples`.
The server hostname and credentials (username and password) are passed 
to the examples via the command line.

You can spin up a server quickly by using Docker:

[!teletype]
```
    # Remove the "-v /var/run/mysqld:/var/run/mysqld" part if you don't need UNIX sockets
    > docker run --name some-mysql -p 3306:3306 -v /var/run/mysqld:/var/run/mysqld -d -e MYSQL_ROOT_PASSWORD= -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -d mysql

    # All the required data can be loaded by running example/db_setup.sql.
    # If you're using the above container, the root user has a blank password
    > mysql -u root < example/db_setup.sql
```

Please note that this container is just for demonstrative purposes,
and is not suitable for production.

The root MySQL user for these containers is `root` and has an empty password.

{all_examples}

[endsect]

'''



# List all examples here
TUTORIALS = [
    Example('tutorial_sync', '1_tutorial/1_sync.cpp', 'Tutorial 1: connections and sync functions'),
    Example('tutorial_async', '1_tutorial/2_async.cpp', 'Tutorial 2: going async with C++20 coroutines'),
    Example('tutorial_with_params', '1_tutorial/3_with_params.cpp', 'Tutorial 3: queries with parameters'),
]

SIMPLE_EXAMPLES = [
    Example('prepared_statements', '2_simple/prepared_statements.cpp', 'Prepared statements'),
    Example('timeouts', '2_simple/timeouts.cpp', 'Setting timeouts to operations'),
    Example('transactions', '2_simple/transactions.cpp', 'Using transactions'),
    Example('disable_tls', '2_simple/disable_tls.cpp', 'Disabling TLS for a connection'),
    Example('tls_certificate_verification', '2_simple/tls_certificate_verification.cpp', 'Setting TLS options: enabling TLS certificate verification'),
    Example('metadata', '2_simple/metadata.cpp', 'Metadata'),
    Example('multi_function', '2_simple/multi_function.cpp', 'Reading rows in batches with multi-function operations'),
    Example('callbacks', '2_simple/callbacks.cpp', 'Callbacks (async functions in C++11)'),
    Example('coroutines_cpp11', '2_simple/coroutines_cpp11.cpp', 'Stackful coroutines (async functions in C++11)'),
    Example('unix_socket', '2_simple/unix_socket.cpp', 'UNIX sockets'),
    Example('batch_inserts', '2_simple/batch_inserts.cpp', 'Batch inserts using client-side query formatting'),
    Example('batch_inserts_generic', '2_simple/batch_inserts_generic.cpp', 'Generic batch inserts with Boost.Describe'),
    Example('dynamic_filters', '2_simple/dynamic_filters.cpp', 'Queries with dynamic filters'),
    Example('patch_updates', '2_simple/patch_updates.cpp', 'Dynamic UPDATE queries with PATCH-like semantics'),
    Example('pipeline', '2_simple/pipeline.cpp', '(Experimental) Pipelines'),
]

ADVANCED_EXAMPLES = [
    Example('source_script', '3_advanced/source_script.cpp', 'Sourcing a .sql file using multi-queries'),
    MultiExample('connection_pool', [
        '3_advanced/connection_pool/main.cpp',
        '3_advanced/connection_pool/types.hpp',
        '3_advanced/connection_pool/repository.hpp',
        '3_advanced/connection_pool/repository.cpp',
        '3_advanced/connection_pool/handle_request.hpp',
        '3_advanced/connection_pool/handle_request.cpp',
        '3_advanced/connection_pool/server.hpp',
        '3_advanced/connection_pool/server.cpp',
        '3_advanced/connection_pool/log_error.hpp',
    ], 'A REST API server that uses connection pooling')
]

# [link mysql.examples.source_script Using multi-queries to source a .sql file]
# [link mysql.examples.connection_pool A REST API server that uses connection pooling]
# [@https://github.com/anarthal/servertech-chat The BoostServerTech chat project uses Boost.MySQL and Boost.Redis to implement a chat server] ]

ALL_EXAMPLES = TUTORIALS + SIMPLE_EXAMPLES + ADVANCED_EXAMPLES

def render_links(examples: List[Example]) -> str:
    return '\n'.join(LINK_TEMPLATE.format(example=elm) for elm in examples)



def main():
    # Render
    contents = TEMPLATE.format(
        tutorial_links=render_links(TUTORIALS),
        simple_links=render_links(SIMPLE_EXAMPLES),
        advanced_links='',
        all_examples='\n\n\n'.join(SECTION_TEMPLATE.format(
            example=elm,
            example_cpps=render_multi_cpp(elm.id, elm.paths) if isinstance(elm, MultiExample) else render_simple_cpp(elm.id, elm.path)
        ) for elm in ALL_EXAMPLES)
    )

    # Write to output file
    output_file = path.join(REPO_BASE, 'doc', 'qbk', '25_examples.qbk')
    with open(output_file, 'wt') as f:
        f.write(contents)
    

if __name__ == '__main__':
    main()